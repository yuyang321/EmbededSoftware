<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\masslink.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\masslink.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Fri Jul 27 01:41:04 2018
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; BspInit &rArr; ginitusart &rArr; USART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[68]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[27]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC1_2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[44]">ADC3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[f]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from girq.o(RESET)
 <LI><a href="#[2a]">CAN1_RX1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[2b]">CAN1_SCE_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[20]">DMA1_Channel1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[21]">DMA1_Channel2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[22]">DMA1_Channel3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[23]">DMA1_Channel4_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[24]">DMA1_Channel5_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[25]">DMA1_Channel6_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[26]">DMA1_Channel7_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4d]">DMA2_Channel1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[50]">DMA2_Channel4_5_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[12]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from girq.o(RESET)
 <LI><a href="#[1b]">EXTI0_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[3d]">EXTI15_10_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[1c]">EXTI1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[1d]">EXTI2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[1e]">EXTI3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[1f]">EXTI4_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[2c]">EXTI9_5_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[19]">FLASH_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[45]">FSMC_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[52]">HAL_EXIT_EVENT</a> from gusertask.o(i.HAL_EXIT_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[54]">HAL_FAULT_EVENT</a> from gusertask.o(i.HAL_FAULT_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[51]">HAL_GSMRX_EVENT</a> from gusertask.o(i.HAL_GSMRX_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[53]">HAL_GSMTX_EVENT</a> from gusertask.o(i.HAL_GSMTX_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[55]">HAL_TIMER_EVENT</a> from gusertask.o(i.HAL_TIMER_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[d]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from girq.o(RESET)
 <LI><a href="#[35]">I2C1_ER_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[34]">I2C1_EV_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[37]">I2C2_ER_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[36]">I2C2_EV_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[e]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from girq.o(RESET)
 <LI><a href="#[c]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from girq.o(RESET)
 <LI><a href="#[16]">PVD_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from girq.o(RESET)
 <LI><a href="#[1a]">RCC_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[3e]">RTCAlarm_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[18]">RTC_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[46]">SDIO_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[38]">SPI1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[39]">SPI2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[48]">SPI3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from girq.o(RESET)
 <LI><a href="#[56]">SYS_APL_EVENT</a> from gusertask.o(i.SYS_APL_EVENT) referenced from gevent.o(.data)
 <LI><a href="#[14]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from girq.o(RESET)
 <LI><a href="#[9]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from girq.o(.text)
 <LI><a href="#[17]">TAMPER_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[2d]">TIM1_BRK_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[30]">TIM1_CC_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[2f]">TIM1_TRG_COM_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[2e]">TIM1_UP_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[31]">TIM2_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[32]">TIM3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[33]">TIM4_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[47]">TIM5_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4b]">TIM6_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4c]">TIM7_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[40]">TIM8_BRK_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[43]">TIM8_CC_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[42]">TIM8_TRG_COM_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[41]">TIM8_UP_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[49]">UART4_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[4a]">UART5_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[3a]">USART1_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[3b]">USART2_IRQHandler</a> from gusart.o(i.USART2_IRQHandler) referenced from girq.o(RESET)
 <LI><a href="#[3c]">USART3_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[3f]">USBWakeUp_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[28]">USB_HP_CAN1_TX_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[29]">USB_LP_CAN1_RX0_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[10]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from girq.o(RESET)
 <LI><a href="#[15]">WWDG_IRQHandler</a> from girq.o(.text) referenced from girq.o(RESET)
 <LI><a href="#[57]">__main</a> from __main.o(!!!main) referenced from girq.o(.text)
 <LI><a href="#[8]">gboot</a> from gboot.o(STARTUPFUNC) referenced from gboot.o(STARTVARA)
 <LI><a href="#[b]">gsledtoggle</a> from gusertask.o(i.gsledtoggle) referenced from gusertask.o(i.GosInit)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[57]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gboot
</UL>

<P><STRONG><a name="[58]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[ac]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[ae]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[af]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[be]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[64]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c3]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[c5]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[c6]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[59]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[c9]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[5c]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ca]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[60]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; BspInit &rArr; ginitusart &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[cb]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[69]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[63]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[cc]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[65]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[cd]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, girq.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, girq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, girq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ce]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d2]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[62]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6a]"></a>gmemcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gboot.o(STARTUPFUNC))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gboot
</UL>

<P><STRONG><a name="[6d]"></a>BspInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gbsp.o(i.BspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BspInit &rArr; ginitusart &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenericGpioInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[99]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[80]"></a>GFIFOInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpipe.o(i.GFIFOInit))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GosInit
</UL>

<P><STRONG><a name="[8d]"></a>GFIFOIsEmpty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpipe.o(i.GFIFOIsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>GFIFOIsFull</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpipe.o(i.GFIFOIsFull))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>GFIFOPop</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gpipe.o(i.GFIFOPop))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GSMRX_EVENT
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>GFIFOPush</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpipe.o(i.GFIFOPush))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenericGpioInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[a8]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsledtoggle
</UL>

<P><STRONG><a name="[a9]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsledtoggle
</UL>

<P><STRONG><a name="[70]"></a>GTimerLoop</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gtimer.o(i.GTimerLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GTimerLoop &rArr; GTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gleavecritical
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gentercritical
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER_EVENT
</UL>

<P><STRONG><a name="[74]"></a>GTimerNodeInit</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gtimer.o(i.GTimerNodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GTimerNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gleavecritical
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gentercritical
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gNodeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GosInit
</UL>

<P><STRONG><a name="[76]"></a>GTimerStart</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gtimer.o(i.GTimerStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTimerStart
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gListCount
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gListAddLast
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gListAddFirst
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gIsNodeInList
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GosInit
</UL>

<P><STRONG><a name="[73]"></a>GTimerStop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gtimer.o(i.GTimerStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gListNodeRemove
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gIsNodeInList
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerLoop
</UL>

<P><STRONG><a name="[7e]"></a>GosInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gusertask.o(i.GosInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GosInit &rArr; GTimerNodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimerlist
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStart
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerNodeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>HAL_EXIT_EVENT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gusertask.o(i.HAL_EXIT_EVENT))
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>HAL_FAULT_EVENT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gusertask.o(i.HAL_FAULT_EVENT))
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>HAL_GSMRX_EVENT</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, gusertask.o(i.HAL_GSMRX_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GSMRX_EVENT
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOPop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>HAL_GSMTX_EVENT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gusertask.o(i.HAL_GSMTX_EVENT))
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>HAL_TIMER_EVENT</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gusertask.o(i.HAL_TIMER_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIMER_EVENT &rArr; GTimerLoop &rArr; GTimerStop
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerLoop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>InitTimerlist</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gtimer.o(i.InitTimerlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitTimerlist
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GosInit
</UL>

<P><STRONG><a name="[e]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnvicset
</UL>

<P><STRONG><a name="[a6]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnvicset
</UL>

<P><STRONG><a name="[a5]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnvicset
</UL>

<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[7c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenericGpioInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[93]"></a>RCC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[90]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 374 bytes, Stack size 24 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[97]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9d]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9e]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[96]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[95]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[94]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[a0]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9f]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9b]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9a]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[9c]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SYS_APL_EVENT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gusertask.o(i.SYS_APL_EVENT))
<BR>[Address Reference Count : 1]<UL><LI> gevent.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>SysRun</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gevent.o(i.SysRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysRun &rArr; ProcessManagerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gidle
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessManagerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>

<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SystemInit</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> girq.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>USART2_IRQHandler</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, gusart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOPush
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOPop
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOIsFull
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFIFOIsEmpty
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[aa]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[8f]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ginitusart
</UL>

<P><STRONG><a name="[8b]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[10]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> girq.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[79]"></a>gIsNodeInList</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, glist.o(i.gIsNodeInList))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStart
</UL>

<P><STRONG><a name="[78]"></a>gListAddFirst</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, glist.o(i.gListAddFirst))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStart
</UL>

<P><STRONG><a name="[7a]"></a>gListAddLast</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, glist.o(i.gListAddLast))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStart
</UL>

<P><STRONG><a name="[77]"></a>gListCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, glist.o(i.gListCount))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStart
</UL>

<P><STRONG><a name="[82]"></a>gListInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, glist.o(i.gListInit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimerlist
</UL>

<P><STRONG><a name="[7b]"></a>gListNodeRemove</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, glist.o(i.gListNodeRemove))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerStop
</UL>

<P><STRONG><a name="[75]"></a>gNodeInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glist.o(i.gNodeInit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerNodeInit
</UL>

<P><STRONG><a name="[91]"></a>ghwrccset</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, gbsp.o(i.ghwrccset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ghwrccset &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwcoreinit
</UL>

<P><STRONG><a name="[6f]"></a>ginitusart</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gusart.o(i.ginitusart))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ginitusart &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[92]"></a>gnvicset</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gbsp.o(i.gnvicset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gnvicset &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwcoreinit
</UL>

<P><STRONG><a name="[61]"></a>main</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gmain.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; BspInit &rArr; ginitusart &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GosInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRun
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[71]"></a>gentercritical</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gtimer.o(i.gentercritical))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerNodeInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerLoop
</UL>

<P><STRONG><a name="[72]"></a>gleavecritical</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gtimer.o(i.gleavecritical))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerNodeInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTimerLoop
</UL>

<P><STRONG><a name="[86]"></a>ProcessManagerTask</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gevent.o(i.ProcessManagerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ProcessManagerTask
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRun
</UL>

<P><STRONG><a name="[87]"></a>gidle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gevent.o(i.gidle))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRun
</UL>

<P><STRONG><a name="[6b]"></a>gmemset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gboot.o(STARTUPFUNC))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gboot
</UL>

<P><STRONG><a name="[8]"></a>gboot</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gboot.o(STARTUPFUNC))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = gboot &rArr; ghwcoreinit &rArr; ghwrccset &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmemcpy
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwcoreinit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmemset
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gboot.o(STARTVARA)
</UL>
<P><STRONG><a name="[6c]"></a>ghwcoreinit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gboot.o(i.ghwcoreinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ghwcoreinit &rArr; ghwrccset &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gnvicset
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ghwrccset
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gboot
</UL>

<P><STRONG><a name="[83]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[84]"></a>SetSysClockTo72</STRONG> (Thumb, 264 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[b]"></a>gsledtoggle</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gusertask.o(i.gsledtoggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gsledtoggle
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gusertask.o(i.GosInit)
</UL>
<P><STRONG><a name="[6e]"></a>GenericGpioInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gbsp.o(i.GenericGpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GenericGpioInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
